섹션 0 : 개발자 필수지식
강의소개 00h:04m:00s
[개발자필수지식] 교안 00h:01m:00s
[필독] 강의 200% 활용법 00h:04m:00s
데이터교환형식 #1. JSON과 직렬화와 역직렬화 ★★★ 00h:02m:00s
데이터교환형식 #2. XML ★★★ 00h:09m:00s
API #1. 개념 ★★★ 00h:01m:00s
API #2. 실습 OPEN API를 이용해 온도예측하기 ★★☆ 00h:01m:00s
API #3. 실습 Node.js를 이용한 간단한 API구축 ★☆☆ 00h:09m:00s
클라우드 #1. 가상머신(virtual machine) ★★★ 00h:06m:00s
클라우드 #2. 오프프레미스(off-premise)와 온프레미스(on-premise) ★★★ 00h:02m:00s
클라우드 #3. IaaS와 PaaS와 SaaS ★★★ 00h:07m:00s
클라우드 #4. 컨테이너(container)와 도커(docker) ★★★ 00h:01m:00s
CI/CD(Continuous Integration/Delivery & Deployment) ★★★ 00h:02m:00s
Q. 클래스와 객체와 인스턴스의 차이는 뭔가요? ★★★ 00h:01m:00s
Q. static키워드는 왜 사용하며 단점은 무엇인가요? ★☆☆ 00h:06m:00s
Q. 오버로딩과 오버라이딩은 무엇인가요? ★★★ 00h:08m:00s
Q. 추상화란 무엇인가요? ★★★ 00h:05m:00s
[특강] IT 대기업 100%  합격하는 방법 00h:02m:00s
total : 01h:11m:00s

섹션 1 : 디자인패턴
[디자인패턴] 교안 00h:01m:00s
디자인패턴 소개 ★★★ 00h:08m:00s
라이브러리와 프레임워크의 차이 ★★★ 00h:01m:00s
싱글톤 패턴 ★★★ 00h:01m:00s
DEEP DIVE : 싱글톤 패턴을 구현하는 7가지 방법 #1 ★★☆ 00h:01m:00s
DEEP DIVE : 싱글톤 패턴을 구현하는 7가지 방법 #2 ★★☆ 00h:08m:00s
팩토리패턴 ★★★ 00h:05m:00s
이터레이터패턴 ★☆☆ 00h:03m:00s
DI와 DIP ★★★ 00h:01m:00s
전략패턴 ★★★ 00h:06m:00s
옵저버 패턴 ★★☆ 00h:03m:00s
프록시 패턴 ★★★ 00h:05m:00s
MVC패턴과 MVP패턴 그리고 MVVM패턴 ★★★ 00h:05m:00s
Spring의 MVC패턴 적용사례 ★★★ 00h:03m:00s
flux패턴 ★★★ 00h:05m:00s
Q. 전략패턴과 의존성주입의 차이는 무엇인가요? ★☆☆ 00h:01m:00s
Q. 컨텍스트란 무엇인가요? ★☆☆ 00h:02m:00s
total : 00h:59m:00s

섹션 2 : 네트워크
[네트워크] 교안 00h:01m:00s
네트워크의 기초 #1. 네트워크, 처리량, 트래픽, 대역폭, RTT ★★★ 00h:01m:00s
네트워크의 기초 #2. 네트워크 토폴로지 : 버스, 스타, 트리 ★★★ 00h:08m:00s
네트워크의 기초 #3. 네트워크 토폴로지 : 링, 메시 ★★★ 00h:07m:00s
네트워크의 기초 #4. 네트워크 토폴로지의 필요성과 병목현상 ★★★ 00h:03m:00s
네트워크의 기초 #5. 유니캐스트, 멀티캐스트, 브로드캐스트 ★★★ 00h:03m:00s
네트워크의 분류 : LAN, MAN, WAN ★☆☆ 00h:01m:00s
TCP/IP 4계층 #1. 개념, 캡슐화, 비캡슐화, PDU, OSI 7계층 ★★★ 00h:01m:00s
TCP/IP 4계층 #2. MTU와 MSS와 PMTUD ★★★ 00h:07m:00s
TCP/IP 4계층 #3. 애플리케이션 계층(application) ★★★ 00h:09m:00s
TCP/IP 4계층 #4. 전송 계층(transport) ★★★ 00h:06m:00s
TCP/IP 4계층 #5. 인터넷 계층(network) ★★★ 00h:01m:00s
TCP의 연결성립 : 3-웨이 핸드셰이크 ★★★ 00h:06m:00s
TCP의 연결해제 : 4-웨이 핸드셰이크와TIME_WAIT ★★★ 00h:06m:00s
라우팅 #1. 개념과 라우터 ★★★ 00h:03m:00s
라우팅 #2. 라우팅테이블 ★★★ 00h:09m:00s
IP주소, MAC주소, ARP, RARP ★★★ 00h:09m:00s
IP주소체계 #1: 이진수 이해하기 ★★★ 00h:08m:00s
IP주소체계 #2: IPv4와 IPv6 ★★★ 00h:01m:00s
IP주소체계 #3. 클래스풀(Classful IP Addressing) ★★★ 00h:01m:00s
IP주소체계 #4. 클래스리스와 서브넷마스크, 서브네팅 ★★★ 00h:01m:00s
IP주소체계 #5. 공인IP(public IP)와 사설IP(private IP)와 NAT ★★★ 00h:04m:00s
HTTP 헤더(header) ★★★ 00h:09m:00s
DEEP DIVE : HTTP/1.0과 HTTP/1.1의 차이와 keep-alive, HOL까지 ★★★ 00h:01m:00s
DEEP DIVE : HTTP/2와 HTTP/3의 차이 ★★★ 00h:09m:00s
DEEP DIVE : HTTPS와 TLS #1. 암호화  ★★☆ 00h:08m:00s
DEEP DIVE : HTTPS와 TLS #2. TLS 핸드셰이크 ★★☆ 00h:02m:00s
웹브라우저의 캐시 #1. 로컬스토리지의 개념과 실습 ★★★ 00h:06m:00s
웹브라우저의 캐시 #2. 로컬스토리지와 오리진(origin) ★★★ 00h:06m:00s
웹브라우저의 캐시 #3. 로컬스토리지의 활용사례 : 캐싱 ★★★ 00h:05m:00s
웹브라우저의 캐시 #4. 세션스토리지 ★★★ 00h:02m:00s
웹브라우저의 캐시 #5. 쿠키(Cookie) ★★★ 00h:01m:00s
웹브라우저의 캐시 #6. 로컬스토리지, 세션스토리지, 쿠키의 공통점과 차이점 ★★★ 00h:04m:00s
로그인 #1. 세션기반인증방식 : 개념 ★★★ 00h:06m:00s
로그인 #2. 세션기반인증방식 : 실습 ★★★ 00h:06m:00s
로그인 #3. 토큰기반인증방식(access토큰, refresh토큰) 개념 ★★★ 00h:07m:00s
로그인 #4. 토큰기반인증방식(access토큰, refresh토큰) 실습 ★★★ 00h:01m:00s
HTTP 상태코드(status code) ★★★ 00h:06m:00s
HTTP 메서드 #1. GET과 POST의 차이 ★★★ 00h:05m:00s
HTTP 메서드 #2. PUT과 PATCH의 차이 ★★★ 00h:04m:00s
네트워크를 이루는 장치의 이해 ★☆☆ 00h:01m:00s
네트워크를 이루는 장치 #1 애플리케이션 계층 ★★★ 00h:02m:00s
네트워크를 이루는 장치 #2 전송 계층 ★☆☆ 00h:01m:00s
네트워크를 이루는 장치 #3 인터넷 계층 ★★★ 00h:01m:00s
네트워크를 이루는 장치 #4 데이터링크계층 ★★★ 00h:02m:00s
네트워크를 이루는 장치 #5 물리계층 ★☆☆ 00h:01m:00s
유선LAN #1. 전이중화 통신, CSMA/CD ★★☆ 00h:02m:00s
유선LAN #2. 케이블 ★☆☆ 00h:01m:00s
무선LAN #1. 반이중화 통신, CSMA/CA, 와이파이 ★★☆ 00h:05m:00s
무선LAN #2. 주파수와 2.4GHz와 5GHz의 차이 ★☆☆ 00h:01m:00s
DEEP DIVE : 대규모 트래픽으로 인한 서버 과부화 해결방법 #1 ★★★ 00h:09m:00s
DEEP DIVE : 대규모 트래픽으로 인한 서버 과부화 해결방법 #2 ★★★ 00h:08m:00s
DEEP DIVE : 대규모 트래픽으로 인한 서버 과부화 해결방법 #3 ★★★ 00h:07m:00s
Q. REST API란 무엇인가요? ★★★ 00h:01m:00s
Q. 브라우저 렌더링과정(Browser Rendering)이란 무엇인가요? ★★☆ 00h:01m:00s
Q. www.naver.com을 쳤을 때 생기는 과정, 그리고 DNS까지 설명해주세요. ★★★ 00h:01m:00s
Q. 이더넷 프레임는 무엇이며 구조가 어떻게 되나요? ★☆☆ 00h:02m:00s
total : 03h:50m:00s

섹션 3 : 운영체제
[운영체제] 교안 00h:01m:00s
운영체제와 컴퓨터시스템의 구조 ★★★ 00h:01m:00s
인터럽트(interrupt) ★★★ 00h:06m:00s
시스템콜(system call)과 modebit ★★★ 00h:05m:00s
메모리계층(memory hierarchy) ★★★ 00h:08m:00s
가상메모리와 스와핑, 페이지폴트 그리고 스레싱 ★★★ 00h:08m:00s
페이지교체 알고리즘 : FIFO, LRU, NUR, LFU ★★★ 00h:07m:00s
프로세스(process)와 스레드(thread)의 차이 ★★★ 00h:03m:00s
프로그램의 컴파일(compile)과정 ★★★ 00h:04m:00s
프로세스의 메모리 구조 ★★★ 00h:03m:00s
PCB와 컨텍스트 스위칭(context switching) ★★★ 00h:09m:00s
프로세스의 상태 ★★★ 00h:03m:00s
멀티프로세싱과 멀티스레딩 ★★★ 00h:07m:00s
IPC(Inter Process Communication) ★★★ 00h:09m:00s
공유자원과 경쟁상태 그리고 임계영역 ★★★ 00h:06m:00s
뮤텍스, 세마포어, 모니터 ★★★ 00h:01m:00s
교착 상태(deadlock) ★★★ 00h:01m:00s
CPU 스케줄링 알고리즘 #1. 비선점형(FCFS, SJF, 우선순위) ★★★ 00h:07m:00s
CPU 스케줄링 알고리즘 #2. 선점형(라운드로빈, SRF, 다단계큐) ★★★ 00h:05m:00s
캐시 #1. 캐시히트와 캐시미스 그리고 실습 ★★★ 00h:09m:00s
캐시 #2. 캐시매핑 : 직접매핑, 연관매핑, 집합 - 연관매핑 ★★★ 00h:08m:00s
메모리할당 #1. 연속할당 : 고정분할과 가변분할 ★★★ 00h:05m:00s
메모리할당 #2. 불연속할당 : 페이징, 세그멘테이션, 페이지드 세그멘테이션 ★★★ 00h:04m:00s
DEEP DIVE : LFD 알고리즘이 왜 최고의 페이지교체 알고리즘인가요? ★☆☆ 00h:06m:00s
Q. convoy effect와 stavation의 차이는 무엇인가요? ★☆☆ 00h:03m:00s
Q. busy_wait란 무엇인가요? ★☆☆ 00h:01m:00s
Q. 운영체제와 펌웨어의 차이점은 무엇인가요? ★☆☆ 00h:01m:00s
total : 02h:11m:00s

섹션 4 : 데이터베이스
[데이터베이스] 교안 00h:01m:00s
데이터베이스의 기본#1 (엔터티, 릴레이션, 속성, 도메인 등) 00h:07m:00s
데이터베이스의 기본#2 (필드와 레코드, 타입) 00h:01m:00s
데이터베이스의 기본 #3(관계, 키) 00h:01m:00s
ERD(Entity Relation Diagram)의 기본 00h:03m:00s
DEEP DIVE : 쇼핑몰 ERD 구축해보기 00h:09m:00s
MySQL CRUD 실습해보기 00h:05m:00s
트랜잭션, 커밋, 롤백 그리고 트랜잭션 전파 00h:03m:00s
트랜잭션의 특징 ACID 00h:04m:00s
트랜잭션의 격리성 00h:06m:00s
트랜잭션의 격리수준에 따른 현상 (팬텀리드, 더티리드 등) 00h:04m:00s
트랜잭션의 격리수준(SERIALIZABLE, REPEATABLE_READ 등) 00h:03m:00s
Q. 관계형데이터베이스와 NoSQL 데이터베이스의 차이는 무엇인가요? 00h:06m:00s
데이터베이스의 핵심, 스토리지엔진(innoDB, MyISAM, wiredtiger 차이) 00h:03m:00s
인덱스의 구조와 효율적인 이유 00h:08m:00s
인덱스 최적화 기법 00h:04m:00s
DEEP DIVE : clustered index와 non-clustered index와의 차이 00h:04m:00s
인덱스는 얼마나 효과적일까? 실습해보기 feat.MongoDB 00h:05m:00s
내부조인, 왼쪽조인, 오른쪽조인, 합집합 조인의 차이 00h:02m:00s
중첩루프조인, 정렬병합조인, 해시조인의 차이 00h:07m:00s
DEEP DIVE : 데이터베이스의 데드락과 해결방법 00h:06m:00s
데이터베이스 정규화과정 #1. 개념과 이상현상 00h:06m:00s
데이터베이스 정규화과정 #2. 함수적 종속성 00h:08m:00s
데이터베이스 정규화과정 #3. 제 1정규형 00h:01m:00s
데이터베이스 정규화과정 #4. 제 2정규형 00h:05m:00s
데이터베이스 정규화과정 #5. 제 3정규형 00h:05m:00s
데이터베이스 정규화과정 #6. 보이스 / 코드 정규형 00h:04m:00s
Q. 정규화과정은 꼭 필요한가요? 00h:03m:00s
total : 02h:04m:00s

섹션 5 : 자료구조
[자료구조] 교안 00h:01m:00s
자료구조의 기본 ★★★ 00h:06m:00s
시간복잡도(time complexity) ★★★ 00h:05m:00s
빅오표기법(Big - O notation) ★★★ 00h:06m:00s
문제로 연습하는 시간복잡도 Q1 ★★☆ 00h:06m:00s
문제로 연습하는 시간복잡도 Q2 ★★☆ 00h:03m:00s
문제로 연습하는 시간복잡도 Q3 ★★☆ 00h:05m:00s
문제로 연습하는 시간복잡도 Q4 ★★☆ 00h:07m:00s
문제로 연습하는 시간복잡도 Q5 ★★☆ 00h:07m:00s
시간복잡도가 필요한 이유 ★★★ 00h:02m:00s
공간복잡도(space complexity) ★★★ 00h:07m:00s
정적배열(Array) ★★★ 00h:04m:00s
동적배열(vector) ★★★ 00h:01m:00s
메모리와 포인터(pointer) #1 메모리와 주소 ★★★ 00h:06m:00s
메모리와 포인터(pointer) #2 포인터 ★★★ 00h:09m:00s
메모리와 포인터(pointer) #3 역참조연산자 ★★★ 00h:02m:00s
메모리와 포인터(pointer) #4 array to pointer decay ★★★ 00h:03m:00s
연결리스트(linked List)와 랜덤접근과 순차적접근 ★★★ 00h:09m:00s
스택(stack) ★★★ 00h:05m:00s
큐(queue) ★★★ 00h:03m:00s
그래프이론의 기초(Graph, Vertex, Edge, Weight) ★★★ 00h:01m:00s
트리(Tree Data Structure) ★★★ 00h:01m:00s
이진트리(Binaray Tree)와 이진탐색트리(BST) ★★★ 00h:01m:00s
인접행렬(adjacency matrix) (1 / 2) ★★★ 00h:01m:00s
인접행렬(adjacency matrix) (2 / 2) ★★★ 00h:07m:00s
인접리스트(adjacency list) ★★★ 00h:01m:00s
인접행렬과 인접리스트의 차이 ★★★ 00h:09m:00s
맵(Map) ★★★ 00h:04m:00s
셋(Set) ★★★ 00h:01m:00s
해시테이블(Hash Table) 00h:01m:00s
힙(heap) ★★★ 00h:05m:00s
자료구조의 시간복잡도 총정리 ★★★ 00h:03m:00s
DEEP DIVE : LRU 페이지 교체 알고리즘 구현 ★★★ 00h:06m:00s
DEEP DIVE : vector의 push_back()의 시간복잡도가 O(1)인 이유는 무엇인가요? ★☆☆ 00h:06m:00s
Q. 배열과 연결리스트의 차이는 무엇인가요? ★★★ 00h:02m:00s
Q. 로또번호 7개를 셔플할 때 어떤 자료구조로 구축해야 하며 로직은 어떻게 될까요? ★☆☆ 00h:04m:00s
total : 02h:30m:00s

섹션 6 : 면접의 정석
[면접의 정석] 교안 00h:01m:00s
면접의 기본  ★☆☆ 00h:03m:00s
체크리스트를 만들어 준비하자 ★★★ 00h:02m:00s
꼬리에 꼬리를 무는 질문을 준비하는 방법 ★★★ 00h:05m:00s
Q. 1분 자기소개 부탁드립니다 ★★★ 00h:01m:00s
Q. 좋은 개발자란 무엇인가요? ★☆☆ 00h:06m:00s
Q. 이 라이브러리가 있는데 이 라이브러리는 왜 썼나요? ★★★ 00h:02m:00s
Q. 워라벨에 대해 어떻게 생각하나요? ★☆☆ 00h:01m:00s
Q. 의견 충돌이 났을 때 어떻게 해야하나요? ★☆☆ 00h:02m:00s
Q. 마지막으로 하고 싶은 질문이 있나요? ★☆☆ 00h:01m:00s
total : 00h:24m:00s

총 수강시간 : 13h:09m:00s